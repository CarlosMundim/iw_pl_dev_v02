# =============================================================================
# Loki Log Aggregation for Kubernetes
# =============================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki
  namespace: iworkz-monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: logging
    app.kubernetes.io/part-of: iworkz-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki
        app.kubernetes.io/component: logging
    spec:
      serviceAccountName: loki-service-account
      containers:
        - name: loki
          image: grafana/loki:2.9.0
          ports:
            - name: http
              containerPort: 3100
          args:
            - '-config.file=/etc/loki/local-config.yaml'
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          volumeMounts:
            - name: loki-config
              mountPath: /etc/loki
            - name: loki-storage
              mountPath: /loki
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
            capabilities:
              drop:
                - ALL
      volumes:
        - name: loki-config
          configMap:
            name: loki-config
        - name: loki-storage
          persistentVolumeClaim:
            claimName: loki-storage-pvc
      securityContext:
        fsGroup: 10001

---
apiVersion: v1
kind: Service
metadata:
  name: loki-service
  namespace: iworkz-monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: logging
spec:
  type: ClusterIP
  ports:
    - port: 3100
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: loki

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: loki-service-account
  namespace: iworkz-monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: service-account

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: loki-storage-pvc
  namespace: iworkz-monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: gp3

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: loki-config
  namespace: iworkz-monitoring
  labels:
    app.kubernetes.io/name: loki
    app.kubernetes.io/component: config
data:
  local-config.yaml: |
    auth_enabled: false

    server:
      http_listen_port: 3100
      grpc_listen_port: 9096

    common:
      path_prefix: /loki
      storage:
        filesystem:
          chunks_directory: /loki/chunks
          rules_directory: /loki/rules
      replication_factor: 1
      ring:
        instance_addr: 127.0.0.1
        kvstore:
          store: inmemory

    schema_config:
      configs:
        - from: 2020-10-24
          store: boltdb-shipper
          object_store: filesystem
          schema: v11
          index:
            prefix: index_
            period: 24h

    ruler:
      alertmanager_url: http://alertmanager-service:9093

    # Retention configuration
    limits_config:
      retention_period: 168h  # 7 days
      ingestion_rate_mb: 10
      ingestion_burst_size_mb: 20
      per_stream_rate_limit: 5MB
      per_stream_rate_limit_burst: 20MB
      max_streams_per_user: 10000
      max_line_size: 256000

    # Table manager for retention
    table_manager:
      retention_deletes_enabled: true
      retention_period: 168h

    # Compactor
    compactor:
      working_directory: /loki/compactor
      shared_store: filesystem
      compaction_interval: 10m
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 150

---
# Promtail DaemonSet for log collection
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: promtail
  namespace: iworkz-monitoring
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: log-collector
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: promtail
  template:
    metadata:
      labels:
        app.kubernetes.io/name: promtail
        app.kubernetes.io/component: log-collector
    spec:
      serviceAccount: promtail-service-account
      containers:
        - name: promtail
          image: grafana/promtail:2.9.0
          args:
            - '-config.file=/etc/promtail/config.yml'
          volumeMounts:
            - name: config
              mountPath: /etc/promtail
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
          env:
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 0  # Required to read logs
            capabilities:
              drop:
                - ALL
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      volumes:
        - name: config
          configMap:
            name: promtail-config
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promtail-service-account
  namespace: iworkz-monitoring
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: service-account

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: promtail-cluster-role
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: rbac
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: promtail-cluster-role-binding
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: rbac
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: promtail-cluster-role
subjects:
  - kind: ServiceAccount
    name: promtail-service-account
    namespace: iworkz-monitoring

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promtail-config
  namespace: iworkz-monitoring
  labels:
    app.kubernetes.io/name: promtail
    app.kubernetes.io/component: config
data:
  config.yml: |
    server:
      http_listen_port: 3101
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki-service:3100/loki/api/v1/push

    scrape_configs:
      # Kubernetes pods
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_controller_name
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            action: replace
            target_label: __tmp_controller_name
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_name
              - __meta_kubernetes_pod_label_app
              - __tmp_controller_name
              - __meta_kubernetes_pod_name
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: app
          - source_labels:
              - __meta_kubernetes_pod_label_app_kubernetes_io_component
              - __meta_kubernetes_pod_label_component
            regex: ^;*([^;]+)(;.*)?$
            action: replace
            target_label: component
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - namespace
            - app
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
          - action: replace
            regex: true/(.*)
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash
            - __meta_kubernetes_pod_annotation_kubernetes_io_config_hash
            - __meta_kubernetes_pod_container_name
            target_label: __path__

      # System logs
      - job_name: kubernetes-pods-static
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels:
              - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
            action: drop
            regex: ""
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_label_component
            target_label: __tmp_component
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_label_tier
            target_label: __tmp_tier
          - action: replace
            regex: ^kube-(.*)$
            replacement: $1
            source_labels:
              - __tmp_component
            target_label: component
          - action: replace
            regex: ^control-plane$
            replacement: kube-controller-manager
            source_labels:
              - __tmp_tier
            target_label: component
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_node_name
            target_label: node_name
          - action: replace
            source_labels:
              - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            replacement: kubernetes-$1
            source_labels:
              - component
            target_label: job
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
              - __meta_kubernetes_pod_container_name
            target_label: container
          - action: replace
            replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
              - __meta_kubernetes_pod_annotation_kubernetes_io_config_mirror
              - __meta_kubernetes_pod_container_name
            target_label: __path__