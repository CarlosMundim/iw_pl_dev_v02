# =============================================================================
# Redis Deployment
# =============================================================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: iworkz-platform
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: iworkz-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: cache
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: iworkz-service-account
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - name: redis
              containerPort: 6379
          command:
            - redis-server
            - /etc/redis/redis.conf
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: REDIS_PASSWORD
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: redis-config
              mountPath: /etc/redis
            - name: redis-storage
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - redis-cli
                - --no-auth-warning
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - --no-auth-warning
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 999
            capabilities:
              drop:
                - ALL
        
        # Redis Exporter for Prometheus monitoring
        - name: redis-exporter
          image: oliver006/redis_exporter:v1.55.0
          ports:
            - name: metrics
              containerPort: 9121
          env:
            - name: REDIS_ADDR
              value: "redis://localhost:6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: REDIS_PASSWORD
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 5
            periodSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 59000
            capabilities:
              drop:
                - ALL
      
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-storage-pvc
      securityContext:
        fsGroup: 999

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: iworkz-platform
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
    - port: 6379
      targetPort: redis
      protocol: TCP
      name: redis
    - port: 9121
      targetPort: metrics
      protocol: TCP
      name: metrics
  selector:
    app.kubernetes.io/name: redis

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secrets
  namespace: iworkz-platform
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  REDIS_PASSWORD: "iworkz_redis_secure_password_2024"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: iworkz-platform
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: config
data:
  redis.conf: |
    # Network
    bind 0.0.0.0
    port 6379
    protected-mode yes
    
    # General
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    databases 16
    
    # Security
    requirepass ${REDIS_PASSWORD}
    
    # Memory management
    maxmemory 256mb
    maxmemory-policy allkeys-lru
    
    # Persistence
    save 900 1
    save 300 10
    save 60 10000
    
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # Append only file
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    
    # Slow log
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # Client output buffer limits
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    
    # Client query buffer limit
    client-query-buffer-limit 1gb
    
    # Protocol max bulk length
    proto-max-bulk-len 512mb
    
    # Hz
    hz 10
    
    # Dynamic hz
    dynamic-hz yes
    
    # RDB
    rdb-save-incremental-fsync yes
    
    # AOF
    aof-rewrite-incremental-fsync yes
    
    # LFU
    lfu-log-factor 10
    lfu-decay-time 1
    
    # Active rehashing
    activerehashing yes
    
    # Jemalloc
    jemalloc-bg-thread yes
    
    # IO threads
    io-threads 4
    io-threads-do-reads yes
    
    # TLS/SSL disabled
    tls-port 0

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-storage-pvc
  namespace: iworkz-platform
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp3

---
# Redis Sentinel for high availability (optional for production)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  namespace: iworkz-platform
  labels:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: sentinel
    app.kubernetes.io/part-of: iworkz-platform
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: redis-sentinel
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis-sentinel
        app.kubernetes.io/component: sentinel
    spec:
      serviceAccountName: iworkz-service-account
      containers:
        - name: redis-sentinel
          image: redis:7-alpine
          ports:
            - name: sentinel
              containerPort: 26379
          command:
            - redis-sentinel
            - /etc/redis-sentinel/sentinel.conf
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-secrets
                  key: REDIS_PASSWORD
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
          volumeMounts:
            - name: sentinel-config
              mountPath: /etc/redis-sentinel
          livenessProbe:
            exec:
              command:
                - redis-cli
                - -p
                - "26379"
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            exec:
              command:
                - redis-cli
                - -p
                - "26379"
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 999
            capabilities:
              drop:
                - ALL
      volumes:
        - name: sentinel-config
          configMap:
            name: redis-sentinel-config
      securityContext:
        fsGroup: 999

---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-service
  namespace: iworkz-platform
  labels:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: sentinel
spec:
  type: ClusterIP
  ports:
    - port: 26379
      targetPort: sentinel
      protocol: TCP
      name: sentinel
  selector:
    app.kubernetes.io/name: redis-sentinel

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: iworkz-platform
  labels:
    app.kubernetes.io/name: redis-sentinel
    app.kubernetes.io/component: config
data:
  sentinel.conf: |
    port 26379
    bind 0.0.0.0
    
    # Master monitoring
    sentinel monitor mymaster redis-service 6379 2
    sentinel auth-pass mymaster ${REDIS_PASSWORD}
    sentinel down-after-milliseconds mymaster 5000
    sentinel parallel-syncs mymaster 1
    sentinel failover-timeout mymaster 10000
    
    # Logging
    loglevel notice
    logfile ""
    
    # Security
    protected-mode no
    
    # Other settings
    sentinel deny-scripts-reconfig yes